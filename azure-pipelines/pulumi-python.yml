trigger:
  batch: true
  branches:
    include:
    - main
  paths:
    include:
    - [[ .PathFilter ]]

pr:
  branches:
    include:
    # Run PR builds that target main.
    - main
  paths:
    include:
    - [[ .PathFilter ]]

pool:
  vmImage: 'ubuntu-latest'

variables:
  pulumiStackName: [[ .PulumiStackName ]]
  pulumiWorkingDirectory: [[ .WorkingDirectory ]]

jobs:
- job: infrastructure
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true
      architecture: 'x64'

  - script: |
      # Check if should use venv
      PULUMI_VENV=$(cat Pulumi.yaml | grep "virtualenv:" | cut -d':' -f2)
      if [ -z ${PULUMI_VENV} ]; then
          pip3 install -r requirements.txt
      else
          python3 -m venv ${PULUMI_VENV}
          ${PULUMI_VENV}/bin/python -m pip install --upgrade pip setuptools wheel
          ${PULUMI_VENV}/bin/python -m pip install -r requirements.txt
      fi
    displayName: Restore Python dependencies
    workingDirectory: $(pulumiWorkingDirectory)

  - task: Pulumi@1
    condition: eq(variables['Build.Reason'], 'PullRequest')
    inputs:
      # To use an Azure Service Connection, un-comment the following line.
      # azureSubscription: ''
      command: 'preview'
      stack: '$(pulumiStackName)'
      args: '--cwd $(pulumiWorkingDirectory)'

  - task: Pulumi@1
    condition: or(eq(variables['Build.Reason'], 'IndividualCI'), eq(variables['Build.Reason'], 'BatchedCI'))
    inputs:
      # To use an Azure Service Connection, un-comment the following line.
      # azureSubscription: ''
      command: 'up'
      stack: '$(pulumiStackName)'
      args: '--yes --cwd $(pulumiWorkingDirectory)'
